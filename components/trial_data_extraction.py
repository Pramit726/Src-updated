# -*- coding: utf-8 -*-
"""Trial_data_extraction.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1N8IMTXuumgm0ShvS1Kek304ceJijX4qL

# **Hyperparameter Tuning Analysis**

This notebook contains code that extracts trial information, including trial ID, learning rate, and maximum validation accuracy, from JSON files within a directory structure. It then creates a pandas DataFrame to store the collected information

### **Importing necesary libraries**
"""

import os
import pandas as pd
import json

"""### **Extracts trial information from JSON files within a directory and creates a DataFrame**"""

# Initialize lists to store trial information
trials = []
learning_rates = []
max_val_accuracies = []

directory= 'E:/Learnings/CookingApp/Image Classification/Image_classification_food_ingredients_v1'

# Iterate through each directory in the specified directory
for root, dirs, files in os.walk(directory):
    for name in dirs:
        if name.startswith("trial_"):
            trial_directory = os.path.join(root, name)

            # Initialize variables to store trial data
            trial_id = None
            learning_rate = None
            max_val_accuracy = None

            # Iterate through each file in the trial directory
            for file_name in os.listdir(trial_directory):
                if file_name.endswith(".json"):
                    file_path = os.path.join(trial_directory, file_name)
                    with open(file_path, 'r') as file:
                        trial_data = json.load(file)

                        # Extract trial ID from the trial directory name
                        trial_id = name

                        # Extract learning rate
                        learning_rate = trial_data['hyperparameters']['values']['learning_rate']

                        # Extract validation accuracy if available and update max_val_accuracy
                        if 'val_accuracy' in trial_data['metrics']['metrics']:
                            val_accuracy = trial_data['metrics']['metrics']['val_accuracy']['observations'][0]['value'][0]
                            if max_val_accuracy is None or val_accuracy > max_val_accuracy:
                                max_val_accuracy = val_accuracy

            # Append trial data to lists
            trials.append(trial_id)
            learning_rates.append(learning_rate)
            max_val_accuracies.append(max_val_accuracy)

# Create a DataFrame from the collected information
data = {
    'Trial': trials,
    'Learning Rate': learning_rates,
    'Max Validation Accuracy': max_val_accuracies
}

df = pd.DataFrame(data)
df

